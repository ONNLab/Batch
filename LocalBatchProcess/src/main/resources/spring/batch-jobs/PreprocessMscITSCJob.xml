<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<import resource="../config/luanch-context.xml" />
	<import resource="../config/database.xml" />
	<import resource="../config/cacheManager.xml" />

	<job id="preprocessMscITSCJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="masterStep" next="moveFiles">
			<partition step="slave" partitioner="partitioner">
				<handler grid-size="${partition.grid-size}" task-executor="taskExecutor" />
			</partition>
		</step>
		<step id="moveFiles">
			<tasklet ref="moveFilesTasklet"></tasklet>
		</step>
	</job>

	<!-- each thread will run this job, with different stepExecutionContext 
		values. -->
	<step id="slave" xmlns="http://www.springframework.org/schema/batch">
		<tasklet transaction-manager="transactionManager">
			<chunk writer="itemWriter" reader="itemReader" processor="itemProcessor"
				commit-interval="${chunk.commit-interval}" />
			<listeners>
				<listener ref="fileNameListener" />
			</listeners>
		</tasklet>
	</step>

	<bean id="partitioner"
		class="org.springframework.batch.core.partition.support.MultiResourcePartitioner">
		<property name="resources" value="#{'${jobs.preprocess.resources.input_path}'+'${jobs.preprocess.resources.filter}'}" />
	</bean>

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${taskExecutor.corePoolSize}" />
		<property name="maxPoolSize" value="${taskExecutor.maxPoolSize}" />
		<property name="queueCapacity" value="${taskExecutor.queueCapacity}" />
	</bean>

	<bean id="fileNameListener" class="com.cat.ic.listener.impl.OutputFileListenerPreProcess"
		scope="step">
		<property name="path" value="${jobs.preprocess.resources.output_path}" />
	</bean>

	<bean id="itemReader" scope="step" autowire-candidate="false"
		parent="itemReaderParent">
		<property name="resource" value="#{stepExecutionContext[fileName]}" />
	</bean>

	<bean id="itemReaderParent" class="org.springframework.batch.item.file.FlatFileItemReader"
		abstract="true">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="," />
						<property name="names"
							value="cdr_date, cdr_time, cdr_duration, cdr_in_route, cdr_out_route, cdr_a_no, cdr_b_no, cdr_bearer_service, cdr_extra9, cdr_extra10, cdr_extra11, cdr_extra12, cdr_extra13, cdr_extra14, cdr_extra15, cdr_extra16, cdr_extra17, cdr_extra18, cdr_extra19" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="targetType" value="com.cat.ic.model.CDR" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="prefixDAO" class="com.cat.ic.dao.impl.PrefixVTADAOImplJDBC">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="prefixVTAService" class="com.cat.ic.service.impl.PrefixVTAServiceImpl">
		<property name="prefixDAO" ref="prefixDAO" />
	</bean>

	<bean id="itemProcessor" class="com.cat.ic.process.CDRPreProcess">
		<property name="prefService" ref="prefixVTAService" />
	</bean>

	<bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter"
		scope="step">
		<property name="resource" value="#{stepExecutionContext[outputFile]}" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names"
							value="cdr_date, cdr_time, cdr_duration, cdr_in_route, cdr_out_route, cdr_a_no, cdr_b_no, cdr_bearer_service, cdr_extra9, cdr_extra10, cdr_extra11, cdr_extra12, cdr_extra13, cdr_extra14, cdr_extra15, cdr_extra16, cdr_extra17, cdr_extra18, cdr_extra19" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="moveFilesTasklet" class="com.cat.ic.task.MoveFilesTasklet">
		<property name="srcDir" value="${jobs.preprocess.resources.input_path}" />
		<property name="dstDir" value="${jobs.preprocess.resources.backup_path}" />
	</bean>
</beans>
